import{_ as e,c as t,o,a4 as a}from"./chunks/framework.CqZjjoIK.js";const b=JSON.parse('{"title":"Contributing","description":"","frontmatter":{"outline":3},"headers":[],"relativePath":"docs/contributing.md","filePath":"docs/contributing.md"}'),r={name:"docs/contributing.md"},n=a('<h1 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">​</a></h1><p>Contributions are welcome. For significant contributions, please open a <a href="https://github.com/gunrein/wallowa/issues" target="_blank" rel="noreferrer">GitHub issue</a> with your idea before putting significant work into it. That will give us a chance to discuss the idea before you get deeply into it.</p><h3 id="documentation" tabindex="-1">Documentation or website <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation or website {#documentation}&quot;">​</a></h3><p>The <a href="https://diataxis.fr/" target="_blank" rel="noreferrer">Diátaxis</a> approach to authoring documentation is used for content. See also the <a href="https://news.ycombinator.com/item?id=36287809" target="_blank" rel="noreferrer">HackerNews discussion of The Surprising Power of Documentation</a> for other tips.</p><p><a href="https://vitepress.dev/" target="_blank" rel="noreferrer">VitePress</a> is the documentation tool used.</p><h4 id="propose-changes-with-a-github-pull-request" tabindex="-1">Propose changes with a GitHub Pull Request <a class="header-anchor" href="#propose-changes-with-a-github-pull-request" aria-label="Permalink to &quot;Propose changes with a GitHub Pull Request&quot;">​</a></h4><p>Follow the <a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests" target="_blank" rel="noreferrer">GitHub Pull Request approach</a> to propose improvements to the documentation.</p><p>Please prefix the name of the branch with <code>docs</code>.</p><h4 id="development-environment" tabindex="-1">Development environment <a class="header-anchor" href="#development-environment" aria-label="Permalink to &quot;Development environment&quot;">​</a></h4><p>Setup your development environment by running <code>npm install</code> in the root directory of the repo.</p><p>Run the documentation development server with <code>npm run docs:dev</code>.</p><h4 id="deploy-website" tabindex="-1">Deploy the latest documentation &amp; website content <a class="header-anchor" href="#deploy-website" aria-label="Permalink to &quot;Deploy the latest documentation &amp; website content {#deploy-website}&quot;">​</a></h4><p>The website and documentation are hosted on GitHub Pages using a sub-directory of <a href="https://github.com/gunrein/gunrein.github.com" target="_blank" rel="noreferrer">this repo</a>.</p><ol><li>Build the latest website and docs locally with <code>npm run docs:build</code></li><li>Verify that build with <code>npm run docs:preview</code></li><li>Fork <a href="https://github.com/gunrein/gunrein.github.com" target="_blank" rel="noreferrer">https://github.com/gunrein/gunrein.github.com</a> into a different directory</li><li>Clean the old build from <code>gunrein.github.com</code> with <code>rm -rf ../gunrein.github.com/wallowa/*</code></li><li>Copy the build to the fork: <code>cp -r website/.vitepress/dist/* ../gunrein.github.com/wallowa/.</code></li><li>Commit and push the changes to <code>gunrein.github.com</code> to GitHub</li></ol><p>The one manual step is to update the <a href="https://hub.docker.com/repository/docker/gunrein/wallowa/general" target="_blank" rel="noreferrer">Docker Hub repository overview</a> to add a link to the new version&#39;s Dockerfile in the &quot;Supported tags and respective Dockerfile links&quot; section.</p><h3 id="improvements-to-the-tool" tabindex="-1">Improvements to the tool <a class="header-anchor" href="#improvements-to-the-tool" aria-label="Permalink to &quot;Improvements to the tool&quot;">​</a></h3><p>To add a new source, check out how the GitHub source works in:</p><ul><li><code>src/github/*</code></li><li><code>src-web/pr_duration.ts</code></li><li><code>templates/github/*</code></li><li><code>static/github/*</code></li></ul><p>To make other server-side improvements, explore <code>src/*</code>.</p><p>To make other browser-side improvements, explore <code>src-web/*</code>.</p><p>Please include documentation updates related to in the same Pull Request.</p><p>The overview of the <a href="./architecture.html">architecture</a> may be helpful.</p><h4 id="propose-changes-with-a-github-pull-request-1" tabindex="-1">Propose changes with a GitHub Pull Request <a class="header-anchor" href="#propose-changes-with-a-github-pull-request-1" aria-label="Permalink to &quot;Propose changes with a GitHub Pull Request&quot;">​</a></h4><p>Follow the <a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests" target="_blank" rel="noreferrer">GitHub Pull Request approach</a> to propose improvements to the tool.</p><h4 id="development-environment-1" tabindex="-1">Development environment <a class="header-anchor" href="#development-environment-1" aria-label="Permalink to &quot;Development environment&quot;">​</a></h4><p>To setup your development environment:</p><ul><li>Install <a href="https://rustup.rs/" target="_blank" rel="noreferrer">rustup</a> (for Rust and Cargo)</li><li>Install NPM</li><li>Run <code>npm install</code> in the root directory of the repo</li></ul><p>Commands to use during development:</p><ul><li><code>npm run dev</code> - runs the web server and watches for changes in <code>src-web</code> and <code>templates</code> (it doesn&#39;t watch for Rust changes, so you&#39;ll need to restart the server manually to see changes in Rust)</li><li><code>npm build</code> - build a release binary</li><li><code>cargo test</code></li><li><code>npm run fetch</code> - run the CLI <code>fetch</code> command</li></ul><h3 id="ship-a-new-release" tabindex="-1">Ship a new release <a class="header-anchor" href="#ship-a-new-release" aria-label="Permalink to &quot;Ship a new release&quot;">​</a></h3><h4 id="update-the-changelog" tabindex="-1">Update the changelog <a class="header-anchor" href="#update-the-changelog" aria-label="Permalink to &quot;Update the changelog&quot;">​</a></h4><p>The changelog records the changes made in each version. Create a new changelog entry in <a href="./changelog.html">website/docs/changelog.md</a> for each version.</p><ul><li>Use absolute URLs for links in the changelog so that the entry can be copy-paste to different locations without breaking the links</li><li>The audience for the changelog are wallowa users so describe the changes in end-user terms rather than development terms</li></ul><h4 id="create-the-release" tabindex="-1">Create the release <a class="header-anchor" href="#create-the-release" aria-label="Permalink to &quot;Create the release&quot;">​</a></h4><p>To cut a new release from the <code>main</code> branch you&#39;ll create and push a new Git tag with the new version number. This will trigger the <a href="https://github.com/gunrein/wallowa/blob/main/.github/workflows/release.yaml" target="_blank" rel="noreferrer">Release</a> GitHub Action to build a Docker image for the new version and push it to <a href="https://hub.docker.com/" target="_blank" rel="noreferrer">Docker Hub</a>.</p><ol><li>Make sure <code>main</code> is up-to-date with all of the changes for the release including documentation updates and the <a href="https://www.unre.in/wallowa/docs/changelog.html" target="_blank" rel="noreferrer">changelog entry</a></li><li>Create a new &quot;Release&quot; on GitHub at <a href="https://github.com/gunrein/wallowa/releases/new" target="_blank" rel="noreferrer">https://github.com/gunrein/wallowa/releases/new</a></li><li>Click on &quot;Choose a tag&quot; and enter the new version number starting with a <code>v</code> (e.g. <code>v0.1.1</code>) and select &quot;Create new tag: {version you entered} on publish&quot;</li><li>Confirm that <code>main</code> is selected as the &quot;Target&quot;</li><li>Enter &quot;wallowa {version you entered}&quot; for the &quot;Release title&quot;, e.g. &quot;wallowa v0.1.1&quot;</li><li>Copy-paste the changelog entry into the &quot;Describe this release&quot; field. Confirm that all links are absolute URLs.</li><li>Check the &quot;Create a discussion for this release&quot; checkbox so that a new discussion is created and choose the &quot;Announcements&quot; category</li><li>Click &quot;Publish release&quot; to publish the release and trigger the Docker image build GitHub Action</li><li>Follow the <a href="#deploy-website">instructions to deploy the latest version of the documentation</a></li></ol>',36),i=[n];function l(s,h,c,u,d,p){return o(),t("div",null,i)}const g=e(r,[["render",l]]);export{b as __pageData,g as default};
