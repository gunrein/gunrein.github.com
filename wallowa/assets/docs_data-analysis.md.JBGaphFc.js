import{_ as a,c as s,o as e,a4 as t}from"./chunks/framework.w9Oelmv5.js";const g=JSON.parse('{"title":"Data analysis","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/data-analysis.md","filePath":"docs/data-analysis.md"}'),i={name:"docs/data-analysis.md"},r=t(`<h1 id="data-analysis" tabindex="-1">Data analysis <a class="header-anchor" href="#data-analysis" aria-label="Permalink to &quot;Data analysis&quot;">​</a></h1><h3 id="duckdb" tabindex="-1">Analyze with DuckDB <a class="header-anchor" href="#duckdb" aria-label="Permalink to &quot;Analyze with DuckDB {#duckdb}&quot;">​</a></h3><p>Thanks to <a href="https://duckdb.org/" target="_blank" rel="noreferrer">DuckDB</a> the data collected by <code>wallowa</code> can be analyzed in several ways including:</p><ul><li>Query using <a href="https://duckdb.org/docs/guides/index#duckdb-sql" target="_blank" rel="noreferrer">SQL</a>, the <a href="https://duckdb.org/docs/guides/sql_features/asof_join" target="_blank" rel="noreferrer">ASOF join</a> (see <a href="./sources/github.html#pull-duration">GitHub Pull Request duration for an example</a>), <a href="https://duckdb.org/docs/guides/sql_features/full_text_search" target="_blank" rel="noreferrer">full text search</a>, <a href="https://duckdb.org/docs/guides/python/ibis" target="_blank" rel="noreferrer">Ibis</a>, <a href="https://duckdb.org/docs/guides/python/polars" target="_blank" rel="noreferrer">Polars</a>, <a href="https://duckdb.org/docs/guides/python/vaex" target="_blank" rel="noreferrer">Vaex</a>, and <a href="https://duckdb.org/docs/guides/python/datafusion" target="_blank" rel="noreferrer">DataFusion</a></li><li>Explore using <a href="https://duckdb.org/docs/guides/python/jupyter" target="_blank" rel="noreferrer">Jupyter Notebooks</a>, <a href="https://duckdb.org/docs/guides/sql_editors/dbeaver" target="_blank" rel="noreferrer">DBeaver</a>, <a href="https://duckdb.org/docs/guides/data_viewers/tableau" target="_blank" rel="noreferrer">Tableau</a>, and <a href="https://duckdb.org/docs/guides/data_viewers/youplot" target="_blank" rel="noreferrer">YouPlot</a></li><li>Export to <a href="https://duckdb.org/docs/guides/import/parquet_export" target="_blank" rel="noreferrer">Parquet</a> and <a href="https://duckdb.org/docs/guides/import/s3_export" target="_blank" rel="noreferrer">Parquet on S3</a>, <a href="https://duckdb.org/docs/guides/import/csv_export" target="_blank" rel="noreferrer">CSV</a>, <a href="https://duckdb.org/docs/guides/import/json_export" target="_blank" rel="noreferrer">JSON</a>, <a href="https://duckdb.org/docs/guides/import/excel_export" target="_blank" rel="noreferrer">Excel</a>, <a href="https://duckdb.org/docs/guides/python/export_pandas" target="_blank" rel="noreferrer">Pandas</a>, <a href="https://duckdb.org/docs/guides/python/export_arrow" target="_blank" rel="noreferrer">Apache Arrow</a></li></ul><p>Follow the <a href="https://duckdb.org/docs/guides/index" target="_blank" rel="noreferrer">DuckDB guides</a> to learn more.</p><h3 id="tables" tabindex="-1">Tables <a class="header-anchor" href="#tables" aria-label="Permalink to &quot;Tables&quot;">​</a></h3><p>There is only one table in <code>wallowa</code> so far.</p><h4 id="wallowa_raw_data" tabindex="-1"><code>wallowa_raw_data</code> <a class="header-anchor" href="#wallowa_raw_data" aria-label="Permalink to &quot;\`wallowa_raw_data\` {#wallowa_raw_data}&quot;">​</a></h4><p>This table stores the raw JSON payloads from the APIs that data is fetched from. Queries can use the <a href="https://duckdb.org/docs/extensions/json" target="_blank" rel="noreferrer">DuckDB JSON extension</a> to extract the data of interest from the payloads. See:</p><ul><li><a href="https://duckdb.org/2023/03/03/json.html" target="_blank" rel="noreferrer">Shredding Deeply Nested JSON, One Vector at a Time</a> for a demo and tutorial of the DuckDB functionality</li><li><a href="./sources/github.html#pull-duration">GitHub Pull Request duration</a> for an example using data from the GitHub Pulls API</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SEQUENCE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> seq_wallowa_raw_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> EXISTS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wallowa_raw_data (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INTEGER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NEXTVAL(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;seq_wallowa_raw_data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    created_at </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TIMESTAMP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DEFAULT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    loaded_at </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TIMESTAMP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;data_source&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    data_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    metadata </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;data&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,11),l=[r];function n(h,d,o,p,k,c){return e(),s("div",null,l)}const E=a(i,[["render",n]]);export{g as __pageData,E as default};
