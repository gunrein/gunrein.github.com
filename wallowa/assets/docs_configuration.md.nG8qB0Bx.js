import{_ as e,c as a,o as i,a4 as t}from"./chunks/framework.w9Oelmv5.js";const u=JSON.parse('{"title":"Configuration","description":"","frontmatter":{"outline":3},"headers":[],"relativePath":"docs/configuration.md","filePath":"docs/configuration.md"}'),s={name:"docs/configuration.md"},o=t('<h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h1><p>Configuration is loaded from multiple places with precedence in this order:</p><ol><li>CLI flags</li><li>The running shell&#39;s environment variables</li><li>Project-level environment configuration from the <code>.env</code> file in the project directory</li><li>Project-level configuration file (see <a href="#config">below for details</a>)</li></ol><p>This project follows the <a href="https://clig.dev/" target="_blank" rel="noreferrer">Command Line Interface Guidelines</a>.</p><h3 id="config" tabindex="-1"><code>config</code> <a class="header-anchor" href="#config" aria-label="Permalink to &quot;`config` {#config}&quot;">​</a></h3><p>The configuration file to load. The configuration file can be expressed in one of multiple file formats: <a href="https://toml.io/" target="_blank" rel="noreferrer">TOML</a>, <a href="https://www.json.org/" target="_blank" rel="noreferrer">JSON</a>, <a href="https://yaml.org/" target="_blank" rel="noreferrer">YAML</a>, <a href="https://en.wikipedia.org/wiki/INI_file" target="_blank" rel="noreferrer">INI</a>, <a href="https://github.com/ron-rs/ron" target="_blank" rel="noreferrer">RON</a>, or <a href="https://json5.org/" target="_blank" rel="noreferrer">JSON5</a>.</p><ul><li><strong>Default</strong>: <code>wallowa.config.[toml | json | yaml | ini | ron | json5]</code> in the working directory. The first configuration file found in the order listed here is used. The others are ignored.</li><li><strong>CLI</strong>: <code>wallowa --config CONFIG</code> where <code>CONFIG</code> is the path to the configuration file (<code>wallowa --config wallowa.config.toml</code> for example)</li><li><strong>Environment variable</strong>: <code>WALLOWA_CONFIG</code> (<code>WALLOWA_CONFIG=wallowa.config.toml</code> for example)</li></ul><h3 id="database" tabindex="-1"><code>database</code> <a class="header-anchor" href="#database" aria-label="Permalink to &quot;`database` {#database}&quot;">​</a></h3><p>The DuckDB database file to use. If the database file does not exist then it will be created. The special value <code>:memory:</code> can be used to create an in-memory database where no data is persisted to disk (all data is lost when the process exits). See the <a href="https://duckdb.org/docs/connect.html" target="_blank" rel="noreferrer">DuckDB documentation on <code>connect</code></a> for more information.</p><ul><li><strong>Default</strong>: <code>wallowa.db</code> in the working directory</li><li><strong>CLI</strong>: this setting cannot be configured with a CLI argument</li><li><strong>Environment variable</strong>: <code>WALLOWA_DATABASE</code></li></ul><h4 id="example-for-the-wallowa-config-toml-file" tabindex="-1">Example for the <code>wallowa.config.toml</code> file <a class="header-anchor" href="#example-for-the-wallowa-config-toml-file" aria-label="Permalink to &quot;Example for the `wallowa.config.toml` file&quot;">​</a></h4><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">database = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wallowa.db&quot;</span></span></code></pre></div><h3 id="fetch-enabled" tabindex="-1"><code>fetch.enabled</code> <a class="header-anchor" href="#fetch-enabled" aria-label="Permalink to &quot;`fetch.enabled`&quot;">​</a></h3><p>Whether to fetch new data in the background. If this is disabled, then use the <code>wallowa fetch</code> CLI command to fetch when the server is not running.</p><ul><li><strong>Default</strong>: <code>true</code></li><li><strong>CLI</strong>: this setting cannot be configured with a CLI argument</li><li><strong>Environment variable</strong>: <code>WALLOWA_FETCH_ENABLED</code></li></ul><h4 id="example-for-the-wallowa-config-toml-file-1" tabindex="-1">Example for the <code>wallowa.config.toml</code> file <a class="header-anchor" href="#example-for-the-wallowa-config-toml-file-1" aria-label="Permalink to &quot;Example for the `wallowa.config.toml` file&quot;">​</a></h4><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">enabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><h3 id="fetch-interval" tabindex="-1"><code>fetch.interval</code> <a class="header-anchor" href="#fetch-interval" aria-label="Permalink to &quot;`fetch.interval`&quot;">​</a></h3><p>The time interval to wait between fetching for additional data, in seconds.</p><ul><li><strong>Default</strong>: <code>3600</code> (1 hour)</li><li><strong>CLI</strong>: this setting cannot be configured with a CLI argument</li><li><strong>Environment variable</strong>: <code>WALLOWA_FETCH_INTERVAL</code></li></ul><h4 id="example-for-the-wallowa-config-toml-file-2" tabindex="-1">Example for the <code>wallowa.config.toml</code> file <a class="header-anchor" href="#example-for-the-wallowa-config-toml-file-2" aria-label="Permalink to &quot;Example for the `wallowa.config.toml` file&quot;">​</a></h4><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">interval = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3600</span></span></code></pre></div><h3 id="github-auth-token" tabindex="-1"><code>github.auth.token</code> <a class="header-anchor" href="#github-auth-token" aria-label="Permalink to &quot;`github.auth.token` {#github-auth-token}&quot;">​</a></h3><p>The auth token to use for authentication to the GitHub REST API. It is recommended to use a <a href="https://docs.github.com/en/rest/overview/authenticating-to-the-rest-api?apiVersion=2022-11-28#authenticating-with-a-personal-access-token" target="_blank" rel="noreferrer">personal access token</a> with read-only access to each of the <a href="#github-repos">repos</a> being tracked.</p><ul><li><strong>Default</strong>: none</li><li><strong>CLI</strong>: this setting cannot be configured with a CLI argument</li><li><strong>Environment variable</strong>: <code>WALLOWA_GITHUB_AUTH_TOKEN</code></li></ul><h4 id="example-as-an-environment-variable-or-in-the-env-file" tabindex="-1">Example as an environment variable or in the <code>.env</code> file <a class="header-anchor" href="#example-as-an-environment-variable-or-in-the-env-file" aria-label="Permalink to &quot;Example as an environment variable or in the `.env` file&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WALLOWA_GITHUB_AUTH_TOKEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A TOKEN FROM GITHUB&#39;</span></span></code></pre></div><h3 id="github-per-page" tabindex="-1"><code>github.per_page</code> <a class="header-anchor" href="#github-per-page" aria-label="Permalink to &quot;`github.per_page` {#github-per-page}&quot;">​</a></h3><p>The number of items to fetch per page of API results (maximum of 100).</p><ul><li><strong>Default</strong>: <code>100</code></li><li><strong>CLI</strong>: this setting cannot be configured with a CLI argument</li><li><strong>Environment variable</strong>: <code>WALLOWA_GITHUB_PER_PAGE</code></li></ul><h4 id="example-for-the-wallowa-config-toml-file-3" tabindex="-1">Example for the <code>wallowa.config.toml</code> file <a class="header-anchor" href="#example-for-the-wallowa-config-toml-file-3" aria-label="Permalink to &quot;Example for the `wallowa.config.toml` file&quot;">​</a></h4><p>This example sets the number of items to fetch per page to 50.</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">per_page = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;50&quot;</span></span></code></pre></div><h3 id="github-repos" tabindex="-1"><code>github.repos</code> <a class="header-anchor" href="#github-repos" aria-label="Permalink to &quot;`github.repos` {#github-repos}&quot;">​</a></h3><p>The GitHub repositories to track.</p><ul><li><strong>Default</strong>: <code>[]</code> (no repositories)</li><li><strong>CLI</strong>: this setting cannot be configured with a CLI argument</li><li><strong>Environment variable</strong>: <code>WALLOWA_GITHUB_REPOS</code></li></ul><h4 id="example-for-the-wallowa-config-toml-file-4" tabindex="-1">Example for the <code>wallowa.config.toml</code> file <a class="header-anchor" href="#example-for-the-wallowa-config-toml-file-4" aria-label="Permalink to &quot;Example for the `wallowa.config.toml` file&quot;">​</a></h4><p>This example tracks two repos: <code>open-telemetry/opentelemetry-rust</code> and <code>open-telemetry/opentelemetry-swift</code>.</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">repos = [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;open-telemetry/opentelemetry-rust&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;open-telemetry/opentelemetry-swift&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h3 id="log-format" tabindex="-1"><code>log-format</code> <a class="header-anchor" href="#log-format" aria-label="Permalink to &quot;`log-format` {#log-format}&quot;">​</a></h3><p>Set the log format.</p><ul><li><strong>Default</strong>: <code>terminal</code></li><li><strong>CLI</strong>: <code>wallowa --log-format=FORMAT</code> where <code>FORMAT</code> is one of the values listed above (<code>wallowa --log-format=full</code> for example)</li><li><strong>Environment variable</strong>: <code>WALLOWA_LOG_FORMAT</code> (<code>WALLOWA_LOG_FORMAT=json</code> for example)</li></ul><p>Accepted values are:</p><ul><li><code>terminal</code> - terminal-friendly human-readable basic log messages (the default)</li><li><code>full</code> - richer human-readable log messages</li><li><code>compact</code> - similar to <code>full</code>, but with less information</li><li><code>pretty</code> - multi-line version of <code>full</code></li><li><code>json</code> - newline-delimited JSON logs</li></ul><p>See <a href="https://docs.rs/tracing-subscriber/latest/tracing_subscriber/fmt/#formatters" target="_blank" rel="noreferrer">https://docs.rs/tracing-subscriber/latest/tracing_subscriber/fmt/#formatters</a> for more details.</p><h3 id="log-level" tabindex="-1">Log level <a class="header-anchor" href="#log-level" aria-label="Permalink to &quot;Log level {#log-level}&quot;">​</a></h3><p>Set the log level to output. See <a href="https://rust-lang-nursery.github.io/rust-cookbook/development_tools/debugging/config_log.html" target="_blank" rel="noreferrer">https://rust-lang-nursery.github.io/rust-cookbook/development_tools/debugging/config_log.html</a> for more on configuration options.</p><p>Note that setting the environment variable <code>RUST_BACKTRACE=1</code> can be used to include a backtrace in error output. See <a href="https://doc.rust-lang.org/std/backtrace/index.html" target="_blank" rel="noreferrer">https://doc.rust-lang.org/std/backtrace/index.html</a> for more details.</p><ul><li><strong>Default</strong>: <code>INFO</code></li><li><strong>CLI</strong>: this setting cannot be configured with a CLI argument</li><li><strong>Environment variable</strong>: <code>WALLOWA_LOG</code> (<code>WALLOWA_LOG=debug</code> for example)</li></ul><p>Accepted values are:</p><ul><li><code>terminal</code> - terminal-friendly human-readable basic log messages (the default)</li><li><code>full</code> - richer human-readable log messages</li><li><code>compact</code> - similar to <code>full</code>, but with less information</li><li><code>pretty</code> - multi-line version of <code>full</code></li><li><code>json</code> - newline-delimited JSON logs</li></ul><p>See <a href="https://docs.rs/tracing-subscriber/latest/tracing_subscriber/fmt/#formatters" target="_blank" rel="noreferrer">https://docs.rs/tracing-subscriber/latest/tracing_subscriber/fmt/#formatters</a> for more details.</p><h3 id="server-host" tabindex="-1"><code>server.host</code> <a class="header-anchor" href="#server-host" aria-label="Permalink to &quot;`server.host`&quot;">​</a></h3><p>The network address to bind to.</p><ul><li><strong>Default</strong>: &quot;0.0.0.0&quot;</li><li><strong>CLI</strong>: this setting cannot be configured with a CLI argument</li><li><strong>Environment variable</strong>: <code>WALLOWA_SERVER_HOST</code></li></ul><h4 id="example-for-the-wallowa-config-toml-file-5" tabindex="-1">Example for the <code>wallowa.config.toml</code> file <a class="header-anchor" href="#example-for-the-wallowa-config-toml-file-5" aria-label="Permalink to &quot;Example for the `wallowa.config.toml` file&quot;">​</a></h4><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">host = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.0.0.0&quot;</span></span></code></pre></div><h3 id="server-port" tabindex="-1"><code>server.port</code> <a class="header-anchor" href="#server-port" aria-label="Permalink to &quot;`server.port`&quot;">​</a></h3><p>The network port to bind to.</p><ul><li><strong>Default</strong>: &quot;9843&quot;</li><li><strong>CLI</strong>: this setting cannot be configured with a CLI argument</li><li><strong>Environment variable</strong>: <code>WALLOWA_SERVER_PORT</code></li></ul><h4 id="example-for-the-wallowa-config-toml-file-6" tabindex="-1">Example for the <code>wallowa.config.toml</code> file <a class="header-anchor" href="#example-for-the-wallowa-config-toml-file-6" aria-label="Permalink to &quot;Example for the `wallowa.config.toml` file&quot;">​</a></h4><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;9843&quot;</span></span></code></pre></div><h3 id="server-response-compression-brotli" tabindex="-1"><code>server.response.compression.brotli</code> <a class="header-anchor" href="#server-response-compression-brotli" aria-label="Permalink to &quot;`server.response.compression.brotli`&quot;">​</a></h3><p>Use brotli compression for HTTP server responses when requested by the client.</p><ul><li><strong>Default</strong>: false</li><li><strong>CLI</strong>: this setting cannot be configured with a CLI argument</li><li><strong>Environment variable</strong>: <code>WALLOWA_SERVER_RESPONSE_COMPRESSION_BROTLI</code></li></ul><h4 id="example-for-the-wallowa-config-toml-file-7" tabindex="-1">Example for the <code>wallowa.config.toml</code> file <a class="header-anchor" href="#example-for-the-wallowa-config-toml-file-7" aria-label="Permalink to &quot;Example for the `wallowa.config.toml` file&quot;">​</a></h4><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">brotli = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre></div><h3 id="server-response-compression-deflate" tabindex="-1"><code>server.response.compression.deflate</code> <a class="header-anchor" href="#server-response-compression-deflate" aria-label="Permalink to &quot;`server.response.compression.deflate`&quot;">​</a></h3><p>Use deflate compression for HTTP server responses when requested by the client.</p><ul><li><strong>Default</strong>: true</li><li><strong>CLI</strong>: this setting cannot be configured with a CLI argument</li><li><strong>Environment variable</strong>: <code>WALLOWA_SERVER_RESPONSE_COMPRESSION_DEFLATE</code></li></ul><h4 id="example-for-the-wallowa-config-toml-file-8" tabindex="-1">Example for the <code>wallowa.config.toml</code> file <a class="header-anchor" href="#example-for-the-wallowa-config-toml-file-8" aria-label="Permalink to &quot;Example for the `wallowa.config.toml` file&quot;">​</a></h4><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">deflate = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><h3 id="server-response-compression-gzip" tabindex="-1"><code>server.response.compression.gzip</code> <a class="header-anchor" href="#server-response-compression-gzip" aria-label="Permalink to &quot;`server.response.compression.gzip`&quot;">​</a></h3><p>Use gzip compression for HTTP server responses when requested by the client.</p><ul><li><strong>Default</strong>: true</li><li><strong>CLI</strong>: this setting cannot be configured with a CLI argument</li><li><strong>Environment variable</strong>: <code>WALLOWA_SERVER_RESPONSE_COMPRESSION_GZIP</code></li></ul><h4 id="example-for-the-wallowa-config-toml-file-9" tabindex="-1">Example for the <code>wallowa.config.toml</code> file <a class="header-anchor" href="#example-for-the-wallowa-config-toml-file-9" aria-label="Permalink to &quot;Example for the `wallowa.config.toml` file&quot;">​</a></h4><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gzip = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><h3 id="server-response-compression-level" tabindex="-1"><code>server.response.compression.level</code> <a class="header-anchor" href="#server-response-compression-level" aria-label="Permalink to &quot;`server.response.compression.level`&quot;">​</a></h3><p>The compression level to use for HTTP server responses. Options are: <code>algo_default</code>, <code>best</code>, <code>fastest</code>.</p><p><code>algo_default</code> uses the default compression level for the given compression algorithm. See <a href="https://docs.rs/tower-http/0.4.1/tower_http/enum.CompressionLevel.html#variant.Default" target="_blank" rel="noreferrer">https://docs.rs/tower-http/0.4.1/tower_http/enum.CompressionLevel.html#variant.Default</a> for more.</p><ul><li><strong>Default</strong>: &quot;fastest&quot;</li><li><strong>CLI</strong>: this setting cannot be configured with a CLI argument</li><li><strong>Environment variable</strong>: <code>WALLOWA_SERVER_RESPONSE_COMPRESSION_LEVEL</code></li></ul><h4 id="example-for-the-wallowa-config-toml-file-10" tabindex="-1">Example for the <code>wallowa.config.toml</code> file <a class="header-anchor" href="#example-for-the-wallowa-config-toml-file-10" aria-label="Permalink to &quot;Example for the `wallowa.config.toml` file&quot;">​</a></h4><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">level = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;fastest&quot;</span></span></code></pre></div><h3 id="server-response-compression-zstd" tabindex="-1"><code>server.response.compression.zstd</code> <a class="header-anchor" href="#server-response-compression-zstd" aria-label="Permalink to &quot;`server.response.compression.zstd`&quot;">​</a></h3><p>Use zstd compression for HTTP server responses when requested by the client.</p><ul><li><strong>Default</strong>: true</li><li><strong>CLI</strong>: this setting cannot be configured with a CLI argument</li><li><strong>Environment variable</strong>: <code>WALLOWA_SERVER_RESPONSE_COMPRESSION_ZSTD</code></li></ul><h4 id="example-for-the-wallowa-config-toml-file-11" tabindex="-1">Example for the <code>wallowa.config.toml</code> file <a class="header-anchor" href="#example-for-the-wallowa-config-toml-file-11" aria-label="Permalink to &quot;Example for the `wallowa.config.toml` file&quot;">​</a></h4><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">zstd = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div>',88),l=[o];function n(r,h,c,p,d,g){return i(),a("div",null,l)}const m=e(s,[["render",n]]);export{u as __pageData,m as default};
